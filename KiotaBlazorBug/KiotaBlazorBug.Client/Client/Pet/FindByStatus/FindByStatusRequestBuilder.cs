// <auto-generated/>
#pragma warning disable CS0618
using KiotaBlazorBug.Client.Models;
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Threading.Tasks;
using System.Threading;
using System;
namespace KiotaBlazorBug.Client.Pet.FindByStatus
{
    /// <summary>
    /// Builds and executes requests for operations under \pet\findByStatus
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class FindByStatusRequestBuilder : BaseRequestBuilder
    {
        /// <summary>
        /// Instantiates a new <see cref="global::KiotaBlazorBug.Client.Pet.FindByStatus.FindByStatusRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public FindByStatusRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/pet/findByStatus{?status*}", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="global::KiotaBlazorBug.Client.Pet.FindByStatus.FindByStatusRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public FindByStatusRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/pet/findByStatus{?status*}", rawUrl)
        {
        }
        /// <summary>
        /// Multiple status values can be provided with comma separated strings
        /// </summary>
        /// <returns>A List&lt;global::KiotaBlazorBug.Client.Models.Pet&gt;</returns>
        /// <param name="cancellationToken">Cancellation token to use when cancelling requests</param>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public async Task<List<global::KiotaBlazorBug.Client.Models.Pet>?> GetAsync(Action<RequestConfiguration<global::KiotaBlazorBug.Client.Pet.FindByStatus.FindByStatusRequestBuilder.FindByStatusRequestBuilderGetQueryParameters>>? requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#nullable restore
#else
        public async Task<List<global::KiotaBlazorBug.Client.Models.Pet>> GetAsync(Action<RequestConfiguration<global::KiotaBlazorBug.Client.Pet.FindByStatus.FindByStatusRequestBuilder.FindByStatusRequestBuilderGetQueryParameters>> requestConfiguration = default, CancellationToken cancellationToken = default)
        {
#endif
            var requestInfo = ToGetRequestInformation(requestConfiguration);
            var collectionResult = await RequestAdapter.SendCollectionAsync<global::KiotaBlazorBug.Client.Models.Pet>(requestInfo, global::KiotaBlazorBug.Client.Models.Pet.CreateFromDiscriminatorValue, default, cancellationToken).ConfigureAwait(false);
            return collectionResult?.AsList();
        }
        /// <summary>
        /// Multiple status values can be provided with comma separated strings
        /// </summary>
        /// <returns>A <see cref="RequestInformation"/></returns>
        /// <param name="requestConfiguration">Configuration for the request such as headers, query parameters, and middleware options.</param>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::KiotaBlazorBug.Client.Pet.FindByStatus.FindByStatusRequestBuilder.FindByStatusRequestBuilderGetQueryParameters>>? requestConfiguration = default)
        {
#nullable restore
#else
        public RequestInformation ToGetRequestInformation(Action<RequestConfiguration<global::KiotaBlazorBug.Client.Pet.FindByStatus.FindByStatusRequestBuilder.FindByStatusRequestBuilderGetQueryParameters>> requestConfiguration = default)
        {
#endif
            var requestInfo = new RequestInformation(Method.GET, UrlTemplate, PathParameters);
            requestInfo.Configure(requestConfiguration);
            requestInfo.Headers.TryAdd("Accept", "application/json");
            return requestInfo;
        }
        /// <summary>
        /// Returns a request builder with the provided arbitrary URL. Using this method means any other path or query parameters are ignored.
        /// </summary>
        /// <returns>A <see cref="global::KiotaBlazorBug.Client.Pet.FindByStatus.FindByStatusRequestBuilder"/></returns>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        public global::KiotaBlazorBug.Client.Pet.FindByStatus.FindByStatusRequestBuilder WithUrl(string rawUrl)
        {
            return new global::KiotaBlazorBug.Client.Pet.FindByStatus.FindByStatusRequestBuilder(rawUrl, RequestAdapter);
        }
        /// <summary>
        /// Multiple status values can be provided with comma separated strings
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class FindByStatusRequestBuilderGetQueryParameters 
        {
            /// <summary>Status values that need to be considered for filter</summary>
            [Obsolete("This property is deprecated, use StatusAsGetStatusQueryParameterType instead")]
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
            [QueryParameter("status")]
            public string? Status { get; set; }
#nullable restore
#else
            [QueryParameter("status")]
            public string Status { get; set; }
#endif
            /// <summary>Status values that need to be considered for filter</summary>
            [QueryParameter("status")]
            public global::KiotaBlazorBug.Client.Pet.FindByStatus.GetStatusQueryParameterType? StatusAsGetStatusQueryParameterType { get; set; }
        }
        /// <summary>
        /// Configuration for the request such as headers, query parameters, and middleware options.
        /// </summary>
        [Obsolete("This class is deprecated. Please use the generic RequestConfiguration class generated by the generator.")]
        [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
        public partial class FindByStatusRequestBuilderGetRequestConfiguration : RequestConfiguration<global::KiotaBlazorBug.Client.Pet.FindByStatus.FindByStatusRequestBuilder.FindByStatusRequestBuilderGetQueryParameters>
        {
        }
    }
}
#pragma warning restore CS0618
